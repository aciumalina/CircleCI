version: 2.1

executors:
  java-19-docker:
    docker:
      - image: maven:3.9.1-amazoncorretto-19
    working_directory: ~/project

jobs:
  run-unit-tests:
    executor: java-19-docker
    steps:
      - checkout
      - run:
          name: Install dependencies
          command: |
            mvn install -DskipTests
      - run:
          name: Run unit tests
          command: |
            mvn test

  run-lint-code:
    executor: java-19-docker
    steps:
      - checkout
      - run:
          name: Run code linter
          command: |
            mvn checkstyle:check

  run-build-application:
    executor: java-19-docker
    steps:
      - checkout
      - run:
          name: Build application
          command: |
            mvn clean package
      - store_artifacts:
          path: target/QuestionsProcessorMock.jar
          destination: build-artifacts

  build_and_push:
    machine: true
    steps:
      - checkout
      - run:
          name: Check for changes on main branch
          command: |
            git fetch origin main
            if [[ $(git diff --name-only origin/main..HEAD) ]]; then
              echo "Changes detected, proceeding with build..."
            else
              echo "No changes detected, skipping build."
              exit 0
            fi
      - run:
          name: Set Docker tag
          command: |
            export DOCKER_TAG="$(date +'%Y-%m-%d-%H-%M')" 
            echo "DOCKER_TAG=$DOCKER_TAG" > env_vars
            echo "Docker tag is $DOCKER_TAG"
      - run:
          name: Log in to DockerHub
          command: |
            echo "$DOCKER_PASSWORD" | docker login -u "$DOCKER_USERNAME" --password-stdin 
      - run:
          name: Build Docker image
          command: |
            source env_vars
            docker build -t $DOCKER_USERNAME/mock-project-for-circle-ci:$DOCKER_TAG .
      - run:
          name: Push Docker image
          command: |
            source env_vars
            docker push $DOCKER_USERNAME/mock-project-for-circle-ci:$DOCKER_TAG

workflows:
  test-workflow:
    jobs:
      - run-lint-code
      - run-unit-tests
      - run-build-application

  deploy-workflow:
    schedule:
      - cron: "0 */2 * * *"
    jobs:
      - build_and_push:
          filters:
            branches:
              only: main
